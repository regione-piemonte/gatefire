/*******************************************************************************
* Copyright Regione Piemonte - 2022
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/
package it.csi.gatefire.ca.aruba.arubasignservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2021-03-26T16:14:04.152+01:00
 * Generated source version: 3.3.5
 *
 */
@WebService(targetNamespace = "http://arubasignservice.arubapec.it/", name = "ArubaSignService")
@XmlSeeAlso({ObjectFactory.class})
public interface ArubaSignService {

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/retriveCredentialRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/retriveCredentialResponse")
    @RequestWrapper(localName = "retriveCredential", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.RetriveCredential")
    @ResponseWrapper(localName = "retriveCredentialResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.RetriveCredentialResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.RetriveCredentialReturn retriveCredential(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "type", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.CredentialsType type
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialResponse")
    @RequestWrapper(localName = "sendCredential", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.SendCredential")
    @ResponseWrapper(localName = "sendCredentialResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.SendCredentialResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.ArssReturn sendCredential(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "type", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.CredentialsType type
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/listCertAuthRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/listCertAuthResponse")
    @RequestWrapper(localName = "listCertAuth", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ListCertAuth")
    @ResponseWrapper(localName = "listCertAuthResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ListCertAuthResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.UserCertListAuth listCertAuth(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.ApplicationAuth identity,
        @WebParam(name = "domain", targetNamespace = "")
        java.lang.String domain,
        @WebParam(name = "username", targetNamespace = "")
        java.lang.String username
    );

    @WebMethod(operationName = "pdfsignatureV2_multiple")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multipleRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multipleResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2_multiple/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pdfsignatureV2_multiple", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureV2Multiple")
    @ResponseWrapper(localName = "pdfsignatureV2_multipleResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureV2MultipleResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2Multiple pdfsignatureV2Multiple(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "SignRequestV2", targetNamespace = "")
        java.util.List<it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2> signRequestV2,
        @WebParam(name = "Apparence", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.PdfSignApparence apparence,
        @WebParam(name = "pdfprofile", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.PdfProfile pdfprofile,
        @WebParam(name = "dict_signed_attributes", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.DictionarySignedAttributes dictSignedAttributes
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/getVersionRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/getVersionResponse")
    @RequestWrapper(localName = "getVersion", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.GetVersionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String getVersion()
;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/listprocessRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/listprocessResponse")
    @RequestWrapper(localName = "listprocess", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Listprocess")
    @ResponseWrapper(localName = "listprocessResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ListprocessResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<java.lang.String> listprocess(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity
    );

    @WebMethod(operationName = "xmlsignature_multiple")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multipleRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multipleResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature_multiple/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "xmlsignature_multiple", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.XmlsignatureMultiple")
    @ResponseWrapper(localName = "xmlsignature_multipleResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.XmlsignatureMultipleResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2Multiple xmlsignatureMultiple(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "SignRequestV2", targetNamespace = "")
        java.util.List<it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2> signRequestV2,
        @WebParam(name = "parameter", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.XmlSignatureParameter parameter
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelopeRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelopeResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/encryptedEnvelope/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "encryptedEnvelope", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.EncryptedEnvelope")
    @ResponseWrapper(localName = "encryptedEnvelopeResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.EncryptedEnvelopeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.EncryptedEnvelopReturn encryptedEnvelope(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.EncryptedEnvelopReq identity
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "pkcs7signhash")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhashRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhashResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pkcs7signhash", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7Signhash")
    @ResponseWrapper(localName = "pkcs7signhashResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignhashResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2 pkcs7Signhash(

        @WebParam(name = "SignRequestV2", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2 signRequestV2,
        @WebParam(name = "countersignature", targetNamespace = "")
        boolean countersignature,
        @WebParam(name = "excludeSigningTime", targetNamespace = "")
        boolean excludeSigningTime
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "pkcs7sign")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7sign/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pkcs7sign", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7Sign")
    @ResponseWrapper(localName = "pkcs7signResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturn pkcs7Sign(

        @WebParam(name = "SignRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequest signRequest
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "pkcs7signV2_multiple")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multipleRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multipleResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2_multiple/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pkcs7signV2_multiple", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignV2Multiple")
    @ResponseWrapper(localName = "pkcs7signV2_multipleResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignV2MultipleResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2Multiple pkcs7SignV2Multiple(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "SignRequestV2", targetNamespace = "")
        java.util.List<it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2> signRequestV2,
        @WebParam(name = "detached", targetNamespace = "")
        boolean detached
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "auth_methods")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/auth_methodsRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/auth_methodsResponse")
    @RequestWrapper(localName = "auth_methods", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.AuthMethods")
    @ResponseWrapper(localName = "auth_methodsResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.AuthMethodsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.AuthMethodsReturn authMethods(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialAuthRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/sendCredentialAuthResponse")
    @RequestWrapper(localName = "sendCredentialAuth", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.SendCredentialAuth")
    @ResponseWrapper(localName = "sendCredentialAuthResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.SendCredentialAuthResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.ArssReturn sendCredentialAuth(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.ApplicationAuth identity,
        @WebParam(name = "type", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.CredentialsType type,
        @WebParam(name = "domain", targetNamespace = "")
        java.lang.String domain,
        @WebParam(name = "username", targetNamespace = "")
        java.lang.String username
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/closesessionRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/closesessionResponse")
    @RequestWrapper(localName = "closesession", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Closesession")
    @ResponseWrapper(localName = "closesessionResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ClosesessionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String closesession(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "sessionid", targetNamespace = "")
        java.lang.String sessionid
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/listCertRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/listCertResponse")
    @RequestWrapper(localName = "listCert", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ListCert")
    @ResponseWrapper(localName = "listCertResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ListCertResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.UserCertList listCert(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity
    );

    @WebMethod(operationName = "pkcs7signV2")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2Request", output = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2Response", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signV2/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pkcs7signV2", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignV2")
    @ResponseWrapper(localName = "pkcs7signV2Response", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignV2Response")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2 pkcs7SignV2(

        @WebParam(name = "SignRequestV2", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2 signRequestV2,
        @WebParam(name = "detached", targetNamespace = "")
        boolean detached,
        @WebParam(name = "returnder", targetNamespace = "")
        boolean returnder
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "addpkcs7sign")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7signRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7signResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/addpkcs7sign/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "addpkcs7sign", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Addpkcs7Sign")
    @ResponseWrapper(localName = "addpkcs7signResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Addpkcs7SignResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2 addpkcs7Sign(

        @WebParam(name = "SignRequestV2", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2 signRequestV2,
        @WebParam(name = "detached", targetNamespace = "")
        boolean detached
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignature/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pdfsignature", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pdfsignature")
    @ResponseWrapper(localName = "pdfsignatureResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturn pdfsignature(

        @WebParam(name = "SignRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequest signRequest,
        @WebParam(name = "Apparence", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.PdfSignApparence apparence
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pingRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pingResponse")
    @RequestWrapper(localName = "ping", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PingResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String ping()
;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/tsdRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/tsdResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/tsd/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "tsd", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Tsd")
    @ResponseWrapper(localName = "tsdResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.TsdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.MarkReturn tsd(

        @WebParam(name = "MarkRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.MarkRequest markRequest
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "m7m")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/m7mRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/m7mResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/m7m/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "m7m", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.M7M")
    @ResponseWrapper(localName = "m7mResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.M7MResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.MarkReturn m7M(

        @WebParam(name = "MarkRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.MarkRequest markRequest
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod(operationName = "credentials_query")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/credentials_queryRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/credentials_queryResponse")
    @RequestWrapper(localName = "credentials_query", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.CredentialsQuery")
    @ResponseWrapper(localName = "credentials_queryResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.CredentialsQueryResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.CredentialListReturn credentialsQuery(

        @WebParam(name = "credential_query", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.CredentialListQuery credentialQuery
    );

    @WebMethod(operationName = "pkcs7signhash_multiple")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multipleRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multipleResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pkcs7signhash_multiple/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pkcs7signhash_multiple", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignhashMultiple")
    @ResponseWrapper(localName = "pkcs7signhash_multipleResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Pkcs7SignhashMultipleResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2Multiple pkcs7SignhashMultiple(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "SignRequestV2", targetNamespace = "")
        java.util.List<it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2> signRequestV2,
        @WebParam(name = "countersignature", targetNamespace = "")
        boolean countersignature
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignatureRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignatureResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/xmlsignature/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "xmlsignature", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Xmlsignature")
    @ResponseWrapper(localName = "xmlsignatureResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.XmlsignatureResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2 xmlsignature(

        @WebParam(name = "SignRequestV2", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2 signRequestV2,
        @WebParam(name = "parameter", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.XmlSignatureParameter parameter
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/signhashRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/signhashResponse")
    @RequestWrapper(localName = "signhash", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Signhash")
    @ResponseWrapper(localName = "signhashResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.SignhashResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignHashReturn signhash(

        @WebParam(name = "SignHashRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignHashRequest signHashRequest
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2Request", output = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2Response", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureV2/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pdfsignatureV2", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureV2")
    @ResponseWrapper(localName = "pdfsignatureV2Response", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureV2Response")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.SignReturnV2 pdfsignatureV2(

        @WebParam(name = "SignRequestV2", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.SignRequestV2 signRequestV2,
        @WebParam(name = "Apparence", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.PdfSignApparence apparence,
        @WebParam(name = "pdfprofile", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.PdfProfile pdfprofile,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password,
        @WebParam(name = "dict_signed_attributes", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.DictionarySignedAttributes dictSignedAttributes
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/verifyOtpRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/verifyOtpResponse")
    @RequestWrapper(localName = "verifyOtp", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.VerifyOtp")
    @ResponseWrapper(localName = "verifyOtpResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.VerifyOtpResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.ArssReturn verifyOtp(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureDTSRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureDTSResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/pdfsignatureDTS/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "pdfsignatureDTS", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureDTS")
    @ResponseWrapper(localName = "pdfsignatureDTSResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.PdfsignatureDTSResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.MarkReturn pdfsignatureDTS(

        @WebParam(name = "MarkRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.MarkRequest markRequest,
        @WebParam(name = "password", targetNamespace = "")
        java.lang.String password
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/verifyRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/verifyResponse")
    @RequestWrapper(localName = "verify", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Verify")
    @ResponseWrapper(localName = "verifyResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.VerifyResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.VerifyReturn verify(

        @WebParam(name = "request", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.VerifyRequest request
    );

    @WebMethod(operationName = "test_otp")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/test_otpRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/test_otpResponse")
    @RequestWrapper(localName = "test_otp", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.TestOtp")
    @ResponseWrapper(localName = "test_otpResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.TestOtpResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.GwReturn testOtp(

        @WebParam(name = "test_credential", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.TestCredential testCredential
    );

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/tsrRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/tsrResponse", fault = {@FaultAction(className = TypeOfTransportNotImplemented_Exception.class, value = "http://arubasignservice.arubapec.it/ArubaSignService/tsr/Fault/TypeOfTransportNotImplemented")})
    @RequestWrapper(localName = "tsr", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Tsr")
    @ResponseWrapper(localName = "tsrResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.TsrResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.MarkReturn tsr(

        @WebParam(name = "MarkRequest", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.MarkRequest markRequest
    ) throws TypeOfTransportNotImplemented_Exception;

    @WebMethod
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/opensessionRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/opensessionResponse")
    @RequestWrapper(localName = "opensession", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.Opensession")
    @ResponseWrapper(localName = "opensessionResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.OpensessionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String opensession(

        @WebParam(name = "Identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity
    );

    @WebMethod(operationName = "change_password")
    @Action(input = "http://arubasignservice.arubapec.it/ArubaSignService/change_passwordRequest", output = "http://arubasignservice.arubapec.it/ArubaSignService/change_passwordResponse")
    @RequestWrapper(localName = "change_password", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ChangePassword")
    @ResponseWrapper(localName = "change_passwordResponse", targetNamespace = "http://arubasignservice.arubapec.it/", className = "it.csi.gatefire.ca.aruba.arubasignservice.ChangePasswordResponse")
    @WebResult(name = "return", targetNamespace = "")
    public it.csi.gatefire.ca.aruba.arubasignservice.GwReturn changePassword(

        @WebParam(name = "identity", targetNamespace = "")
        it.csi.gatefire.ca.aruba.arubasignservice.Auth identity,
        @WebParam(name = "newPassword", targetNamespace = "")
        java.lang.String newPassword
    );
}
